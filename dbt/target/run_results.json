{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.1", "generated_at": "2025-06-17T10:02:23.080570Z", "invocation_id": "635ca3b5-f4b5-4388-af32-ccd829d870c5", "invocation_started_at": "2025-06-17T10:00:40.055206Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:00:43.402577Z", "completed_at": "2025-06-17T10:00:43.413000Z"}, {"name": "execute", "started_at": "2025-06-17T10:00:43.414026Z", "completed_at": "2025-06-17T10:00:43.773529Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3729109764099121, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1658-0001-fa33-0001-051604e364de"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.stg_customer_interactions", "compiled": true, "compiled_code": "-- Staging model for customer interactions\n-- This model extracts and standardizes customer interaction information from the raw JSON data\n-- Fields are cast to appropriate data types and renamed for clarity\n\nSELECT\n    data:interaction_id::VARCHAR AS interaction_id,\n    data:customer_id::VARCHAR AS customer_id,\n    TRY_TO_TIMESTAMP_NTZ(data:interaction_date::VARCHAR) AS interaction_date,\n    data:agent_id::VARCHAR AS agent_id,\n    data:interaction_type::VARCHAR AS interaction_type,\n    data:interaction_notes::VARCHAR AS interaction_notes\nFROM DBT_CORTEX_LLMS.STAGE.customer_interactions", "relation_name": "DBT_CORTEX_LLMS.STAGE.stg_customer_interactions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:00:43.409027Z", "completed_at": "2025-06-17T10:00:43.413245Z"}, {"name": "execute", "started_at": "2025-06-17T10:00:43.429513Z", "completed_at": "2025-06-17T10:00:44.025270Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.6241018772125244, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1658-0001-fa35-0001-051604e383aa"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.stg_product_reviews", "compiled": true, "compiled_code": "-- Staging model for product reviews\n-- This model extracts and standardizes product review information from the raw JSON data\n-- Fields are cast to appropriate data types and renamed for clarity\n\nSELECT\n    data:review_id::VARCHAR AS review_id,\n    data:customer_id::VARCHAR AS customer_id,\n    data:product_id::VARCHAR AS product_id,\n    TRY_TO_TIMESTAMP_NTZ(data:review_date::VARCHAR) AS review_date,\n    data:review_rating::NUMBER AS review_rating,\n    data:review_text::VARCHAR AS review_text,\n    data:review_language::VARCHAR AS review_language\nFROM DBT_CORTEX_LLMS.STAGE.product_reviews", "relation_name": "DBT_CORTEX_LLMS.STAGE.stg_product_reviews", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:00:43.407504Z", "completed_at": "2025-06-17T10:00:43.413724Z"}, {"name": "execute", "started_at": "2025-06-17T10:00:43.432947Z", "completed_at": "2025-06-17T10:00:44.118944Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.7179887294769287, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1658-0001-edce-0001-051604e2fa06"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.stg_customers", "compiled": true, "compiled_code": "-- Staging model for customer data\n-- This model extracts and standardizes customer information from the raw JSON data\n-- Fields are cast to appropriate data types and renamed for clarity\n\nSELECT\n    data:customer_id::VARCHAR AS customer_id,\n    data:persona::VARCHAR AS persona,\n    TRY_TO_DATE(data:sign_up_date::VARCHAR) AS sign_up_date,\n    data:products_owned::NUMBER AS products_owned,\n    data:lifetime_value::NUMBER AS lifetime_value\nFROM DBT_CORTEX_LLMS.STAGE.customers", "relation_name": "DBT_CORTEX_LLMS.STAGE.stg_customers", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:00:43.410462Z", "completed_at": "2025-06-17T10:00:43.413433Z"}, {"name": "execute", "started_at": "2025-06-17T10:00:43.431366Z", "completed_at": "2025-06-17T10:00:44.380014Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.9785571098327637, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1658-0001-fa29-0001-051604e372ba"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.stg_support_tickets", "compiled": true, "compiled_code": "-- Staging model for support tickets\n-- This model extracts and standardizes support ticket information from the raw JSON data\n-- Fields are cast to appropriate data types and renamed for clarity\n\nSELECT\n    data:ticket_id::VARCHAR AS ticket_id,\n    data:customer_id::VARCHAR AS customer_id,\n    TRY_TO_TIMESTAMP_NTZ(data:ticket_date::VARCHAR) AS ticket_date,\n    data:ticket_status::VARCHAR AS ticket_status,\n    data:ticket_category::VARCHAR AS ticket_category,\n    data:ticket_description::VARCHAR AS ticket_description\nFROM DBT_CORTEX_LLMS.STAGE.support_tickets", "relation_name": "DBT_CORTEX_LLMS.STAGE.stg_support_tickets", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:00:43.777460Z", "completed_at": "2025-06-17T10:00:43.779777Z"}, {"name": "execute", "started_at": "2025-06-17T10:00:43.780100Z", "completed_at": "2025-06-17T10:00:46.369978Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.593202829360962, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1658-0001-fa28-0001-051604e352c6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.fact_customer_interactions", "compiled": true, "compiled_code": "-- Fact model for customer interactions with sentiment analysis\n-- This model enriches customer interactions with AI-generated sentiment scores\n-- Uses Snowflake Cortex for sentiment analysis\n\nSELECT\n    i.interaction_id,\n    i.customer_id,\n    i.interaction_date,\n    i.agent_id,\n    i.interaction_type,\n    i.interaction_notes,\n    -- Add sentiment analysis using Snowflake Cortex\n    SNOWFLAKE.CORTEX.SENTIMENT(i.interaction_notes) AS sentiment_score\nFROM DBT_CORTEX_LLMS.STAGE.stg_customer_interactions i\nWHERE i.interaction_notes IS NOT NULL", "relation_name": "DBT_CORTEX_LLMS.ANALYTICS.fact_customer_interactions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:00:44.028444Z", "completed_at": "2025-06-17T10:00:44.031734Z"}, {"name": "execute", "started_at": "2025-06-17T10:00:44.032129Z", "completed_at": "2025-06-17T10:01:04.693567Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 20.665781021118164, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1658-0001-f8a5-0001-051604e2bdbe"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.fact_product_reviews", "compiled": true, "compiled_code": "-- Fact model for product reviews with sentiment analysis and translations\n-- This model enriches product reviews with AI-generated sentiment scores and translations\n-- Uses Snowflake Cortex for sentiment analysis and translation\n\nSELECT\n    r.review_id,\n    r.customer_id,\n    r.product_id,\n    r.review_date,\n    r.review_rating,\n    r.review_text,\n    r.review_language,\n    -- Add sentiment analysis\n    SNOWFLAKE.CORTEX.SENTIMENT(r.review_text) AS sentiment_score,\n    -- Add standardized text with translations\n    CASE\n        WHEN CONTAINS(LOWER(r.review_language), 'german') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'de', 'en')\n        WHEN CONTAINS(LOWER(r.review_language), 'french') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'fr', 'en')\n        WHEN CONTAINS(LOWER(r.review_language), 'spanish') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'es', 'en')\n        WHEN CONTAINS(LOWER(r.review_language), 'italian') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'it', 'en')\n        WHEN CONTAINS(LOWER(r.review_language), 'portuguese') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'pt', 'en')\n        WHEN CONTAINS(LOWER(r.review_language), 'chinese') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'zh', 'en')\n        WHEN CONTAINS(LOWER(r.review_language), 'japanese') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'ja', 'en')\n        WHEN CONTAINS(LOWER(r.review_language), 'korean') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'ko', 'en')\n        WHEN CONTAINS(LOWER(r.review_language), 'russian') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'ru', 'en')\n        WHEN CONTAINS(LOWER(r.review_language), 'arabic') THEN SNOWFLAKE.CORTEX.TRANSLATE(r.review_text, 'ar', 'en')\n        ELSE r.review_text\n    END AS review_text_english\nFROM DBT_CORTEX_LLMS.STAGE.stg_product_reviews r\nWHERE r.review_text IS NOT NULL", "relation_name": "DBT_CORTEX_LLMS.ANALYTICS.fact_product_reviews", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:00:44.382620Z", "completed_at": "2025-06-17T10:00:44.385195Z"}, {"name": "execute", "started_at": "2025-06-17T10:00:44.385576Z", "completed_at": "2025-06-17T10:01:34.389700Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 50.007697105407715, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1658-0001-f8a5-0001-051604e2bdc2"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.fact_support_tickets", "compiled": true, "compiled_code": "-- Fact model for support tickets with sentiment analysis and priority classification\n-- This model enriches support tickets with AI-generated sentiment scores and priority levels\n-- Uses Snowflake Cortex for sentiment analysis and text classification\n\nSELECT\n    t.ticket_id,\n    t.customer_id,\n    t.ticket_date,\n    t.ticket_status,\n    t.ticket_category,\n    t.ticket_description,\n    -- Add sentiment analysis\n    SNOWFLAKE.CORTEX.SENTIMENT(t.ticket_description) AS sentiment_score,\n    -- Add priority classification\n    SNOWFLAKE.CORTEX.CLASSIFY_TEXT(\n        t.ticket_description,\n        [\n            {\n                'label': 'Critical',\n                'description': 'Requires immediate attention and resolution',\n                'examples': [\n                    'System is down and customers cannot place orders',\n                    'Security breach detected',\n                    'Payment processing completely stopped',\n                    'All users locked out of the system'\n                ]\n            },\n            {\n                'label': 'High',\n                'description': 'Should be resolved within 24 hours',\n                'examples': [\n                    'Customer cannot complete checkout',\n                    'Order status stuck in processing',\n                    'Unable to access account',\n                    'Payment failed for multiple customers'\n                ]\n            },\n            {\n                'label': 'Medium',\n                'description': 'Should be resolved within 3 days',\n                'examples': [\n                    'Product image not displaying correctly',\n                    'Slow response times in certain areas',\n                    'Minor UI issues',\n                    'Account settings not saving'\n                ]\n            },\n            {\n                'label': 'Low',\n                'description': 'Can be handled in regular queue',\n                'examples': [\n                    'General product questions',\n                    'Feature request',\n                    'UI enhancement suggestion',\n                    'Documentation clarification'\n                ]\n            }\n        ],\n        {\n            'task_description': 'Classify the urgency level of this support ticket based on its description'\n        }\n    )['label'] AS priority_level,\n    -- Add customer expectations\n    SNOWFLAKE.CORTEX.COMPLETE(\n        'claude-4-sonnet',\n        'What specific timeframe or deadline does the customer mention or expect for resolution? ' || t.ticket_description\n    ) AS expected_resolution_timeframe,\n    SNOWFLAKE.CORTEX.COMPLETE(\n        'claude-4-sonnet',\n        'What compensation, refund, or specific remedy is the customer seeking? ' || t.ticket_description\n    ) AS requested_remedy\nFROM DBT_CORTEX_LLMS.STAGE.stg_support_tickets t\nWHERE t.ticket_description IS NOT NULL", "relation_name": "DBT_CORTEX_LLMS.ANALYTICS.fact_support_tickets", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:01:34.408493Z", "completed_at": "2025-06-17T10:01:34.411662Z"}, {"name": "execute", "started_at": "2025-06-17T10:01:34.412661Z", "completed_at": "2025-06-17T10:01:35.104706Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7057790756225586, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1659-0001-fa33-0001-051604e364ea"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.ticket_patterns", "compiled": true, "compiled_code": "-- Ticket patterns model that analyzes support ticket patterns\n-- This model aggregates ticket information to identify patterns and trends\n-- Uses array aggregation to track ticket categories and priorities over time\n\nSELECT\n    customer_id,\n    COUNT(*) AS ticket_count,\n    MIN(ticket_date) AS first_ticket_date,\n    MAX(ticket_date) AS most_recent_ticket_date,\n    ARRAY_AGG(ticket_category) WITHIN GROUP (ORDER BY ticket_date) AS ticket_categories,\n    ARRAY_AGG(priority_level) WITHIN GROUP (ORDER BY ticket_date) AS ticket_priorities\nFROM DBT_CORTEX_LLMS.ANALYTICS.fact_support_tickets\nGROUP BY customer_id", "relation_name": "DBT_CORTEX_LLMS.ANALYTICS.ticket_patterns", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:01:34.404155Z", "completed_at": "2025-06-17T10:01:34.412433Z"}, {"name": "execute", "started_at": "2025-06-17T10:01:34.417589Z", "completed_at": "2025-06-17T10:01:35.929915Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.531576156616211, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1659-0001-f7b5-0001-051604e2ed16"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.sentiment_analysis", "compiled": true, "compiled_code": "-- Sentiment analysis model that combines sentiment from all sources\n-- This model aggregates sentiment scores from interactions, reviews, and tickets\n-- Provides a unified view of customer sentiment across all touchpoints\n\nWITH interaction_sentiment AS (\n    SELECT\n        customer_id,\n        interaction_date,\n        sentiment_score,\n        'interaction' AS source_type\n    FROM DBT_CORTEX_LLMS.ANALYTICS.fact_customer_interactions\n),\nreview_sentiment AS (\n    SELECT\n        customer_id,\n        review_date AS interaction_date,\n        sentiment_score,\n        'review' AS source_type\n    FROM DBT_CORTEX_LLMS.ANALYTICS.fact_product_reviews\n),\nticket_sentiment AS (\n    SELECT\n        customer_id,\n        ticket_date AS interaction_date,\n        sentiment_score,\n        'ticket' AS source_type\n    FROM DBT_CORTEX_LLMS.ANALYTICS.fact_support_tickets\n)\nSELECT * FROM interaction_sentiment\nUNION ALL\nSELECT * FROM review_sentiment\nUNION ALL\nSELECT * FROM ticket_sentiment", "relation_name": "DBT_CORTEX_LLMS.ANALYTICS.sentiment_analysis", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:01:35.934045Z", "completed_at": "2025-06-17T10:01:35.938099Z"}, {"name": "execute", "started_at": "2025-06-17T10:01:35.938551Z", "completed_at": "2025-06-17T10:01:37.117873Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.1846091747283936, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1659-0001-fa35-0001-051604e383b2"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.sentiment_trends", "compiled": true, "compiled_code": "-- Sentiment trends model that analyzes sentiment patterns over time\n-- This model calculates sentiment trends, volatility, and historical patterns\n-- Uses window functions to track changes in sentiment over time\n\nWITH sentiment_data AS (\n    SELECT\n        customer_id,\n        sentiment_score,\n        interaction_date,\n        FIRST_VALUE(sentiment_score) OVER (PARTITION BY customer_id ORDER BY interaction_date) AS first_sentiment,\n        LAST_VALUE(sentiment_score) OVER (PARTITION BY customer_id ORDER BY interaction_date \n                                         ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_sentiment\n    FROM DBT_CORTEX_LLMS.ANALYTICS.sentiment_analysis\n)\nSELECT\n    customer_id,\n    ARRAY_AGG(sentiment_score) WITHIN GROUP (ORDER BY interaction_date) AS sentiment_history,\n    AVG(sentiment_score) AS avg_sentiment,\n    MIN(sentiment_score) AS min_sentiment,\n    MAX(sentiment_score) AS max_sentiment,\n    MAX(sentiment_score) - MIN(sentiment_score) AS sentiment_volatility,\n    CASE\n        WHEN COUNT(*) > 1 THEN \n            MAX(last_sentiment) - MAX(first_sentiment)\n        ELSE 0\n    END AS sentiment_trend\nFROM sentiment_data\nGROUP BY customer_id", "relation_name": "DBT_CORTEX_LLMS.ANALYTICS.sentiment_trends", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:01:34.400493Z", "completed_at": "2025-06-17T10:01:34.412117Z"}, {"name": "execute", "started_at": "2025-06-17T10:01:34.415278Z", "completed_at": "2025-06-17T10:02:21.242807Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 46.84553909301758, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd1659-0001-fa28-0001-051604e352da"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.insight_summaries", "compiled": true, "compiled_code": "-- Insight summaries model that generates AI summaries of customer interactions\n-- This model uses Snowflake Cortex to generate concise summaries of customer behavior\n-- Combines information from all interaction types into a single summary\n\nSELECT\n    customer_id,\n    SNOWFLAKE.CORTEX.COMPLETE(\n        'claude-4-sonnet',\n        [\n            {\n                'role': 'user',\n                'content': 'Summarize the following customer interactions in 100 words or less: ' || \n                ARRAY_TO_STRING(\n                    ARRAY_AGG(\n                        CASE\n                            WHEN interaction_notes IS NOT NULL THEN interaction_notes\n                            WHEN review_text IS NOT NULL THEN review_text\n                            WHEN ticket_description IS NOT NULL THEN ticket_description\n                        END\n                    ),\n                    ' | '\n                )\n            }\n        ],\n        {\n            'max_tokens': 100\n        }\n    ) AS customer_summary\nFROM (\n    SELECT customer_id, interaction_notes, NULL as review_text, NULL as ticket_description\n    FROM DBT_CORTEX_LLMS.ANALYTICS.fact_customer_interactions\n    UNION ALL\n    SELECT customer_id, NULL, review_text, NULL\n    FROM DBT_CORTEX_LLMS.ANALYTICS.fact_product_reviews\n    UNION ALL\n    SELECT customer_id, NULL, NULL, ticket_description\n    FROM DBT_CORTEX_LLMS.ANALYTICS.fact_support_tickets\n)\nGROUP BY customer_id", "relation_name": "DBT_CORTEX_LLMS.ANALYTICS.insight_summaries", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T10:02:21.248083Z", "completed_at": "2025-06-17T10:02:21.253827Z"}, {"name": "execute", "started_at": "2025-06-17T10:02:21.254766Z", "completed_at": "2025-06-17T10:02:22.788556Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.541322946548462, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd165a-0001-fa29-0001-051604e372c6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dbt_cortex.customer_persona_signals", "compiled": true, "compiled_code": "-- Customer persona signals model that analyzes customer behavior patterns\n-- This model combines various signals to classify customer personas and predict behavior\n-- Uses sentiment analysis, support history, and other metrics to create customer profiles\n\nSELECT \n    cb.customer_id,\n    \n    -- Base customer information\n    cb.persona,\n    cb.sign_up_date,\n    cb.products_owned,\n    cb.lifetime_value,\n    \n    -- Sentiment analysis\n    st.avg_sentiment,\n    st.sentiment_trend,\n    st.sentiment_volatility,\n    CASE \n        WHEN st.avg_sentiment < -0.3 THEN 'Negative'\n        WHEN st.avg_sentiment > 0.3 THEN 'Positive'\n        ELSE 'Neutral'\n    END AS overall_sentiment,\n    \n    -- Support history\n    tpat.ticket_count,\n    tpat.ticket_categories,\n    tpat.ticket_priorities,\n    \n    -- Review ratings\n    AVG(pr.review_rating) AS avg_rating,\n    \n    -- Customer summary\n    is_summary.customer_summary,\n    \n    -- Customer persona\n    CASE\n        WHEN st.avg_sentiment > 0.5 AND COALESCE(tpat.ticket_count, 0) <= 1 THEN 'Satisfied'\n        WHEN st.avg_sentiment < -0.1 AND COALESCE(tpat.ticket_count, 0) >= 1 THEN 'Frustrated'\n        WHEN st.sentiment_volatility > 0.95 THEN 'Mixed'\n        WHEN st.sentiment_trend > 0.3 THEN 'Improving'\n        WHEN st.sentiment_trend < -0.3 THEN 'Deteriorating'\n        ELSE 'Neutral'\n    END AS derived_persona,\n    \n    -- Churn risk\n    CASE\n        WHEN st.avg_sentiment < -0.1 AND COALESCE(tpat.ticket_count, 0) >= 1 THEN 'High'\n        WHEN st.avg_sentiment < -0.05 THEN 'High'\n        WHEN st.avg_sentiment < 0 OR (COALESCE(tpat.ticket_count, 0) >= 1 AND st.sentiment_trend < 0) THEN 'Medium'\n        WHEN st.sentiment_trend < 0 THEN 'Medium'\n        ELSE 'Low'\n    END AS churn_risk,\n    \n    -- Upsell opportunity\n    CASE\n        WHEN st.avg_sentiment > 0.3 AND COALESCE(tpat.ticket_count, 0) <= 1 THEN 'High'\n        WHEN st.sentiment_trend > 0.3 THEN 'Medium'\n        ELSE 'Low'\n    END AS upsell_opportunity\nFROM DBT_CORTEX_LLMS.STAGE.stg_customers cb\nLEFT JOIN DBT_CORTEX_LLMS.ANALYTICS.sentiment_trends st USING (customer_id)\nLEFT JOIN DBT_CORTEX_LLMS.ANALYTICS.insight_summaries is_summary USING (customer_id)\nLEFT JOIN DBT_CORTEX_LLMS.ANALYTICS.ticket_patterns tpat USING (customer_id)\nLEFT JOIN DBT_CORTEX_LLMS.ANALYTICS.fact_product_reviews pr USING (customer_id)\nGROUP BY \n    cb.customer_id,\n    cb.persona,\n    cb.sign_up_date,\n    cb.products_owned,\n    cb.lifetime_value,\n    st.avg_sentiment, \n    st.sentiment_trend, \n    st.sentiment_volatility,\n    tpat.ticket_count,\n    tpat.ticket_categories,\n    tpat.ticket_priorities,\n    is_summary.customer_summary", "relation_name": "DBT_CORTEX_LLMS.ANALYTICS.customer_persona_signals", "batch_results": null}], "elapsed_time": 101.53219079971313, "args": {"log_level_file": "debug", "show_resource_report": false, "defer": false, "source_freshness_run_project_hooks": true, "quiet": false, "use_colors_file": true, "use_fast_test_edges": false, "send_anonymous_usage_stats": true, "use_colors": true, "upload_to_artifacts_ingest_api": false, "indirect_selection": "eager", "state_modified_compare_more_unrendered_values": false, "cache_selected_only": false, "invocation_command": "dbt run", "print": true, "require_nested_cumulative_type_params": false, "version_check": true, "project_dir": "/Users/axross/Snowflake/QuickStarts/dbt_cortex_analytics/dbt", "warn_error_options": {"error": [], "warn": [], "silence": []}, "require_batched_execution_for_custom_microbatch_strategy": false, "partial_parse_file_diff": true, "printer_width": 80, "populate_cache": true, "validate_macro_args": false, "write_json": true, "favor_state": false, "which": "run", "require_resource_names_without_spaces": true, "state_modified_compare_vars": false, "static_parser": true, "log_level": "info", "profiles_dir": "/Users/axross/.dbt", "log_format_file": "debug", "require_all_warnings_handled_by_warn_error": false, "exclude": [], "macro_debugging": false, "require_yaml_configuration_for_mf_time_spines": false, "strict_mode": false, "require_explicit_package_overrides_for_builtin_materializations": true, "empty": false, "partial_parse": true, "select": [], "vars": {}, "log_format": "default", "introspect": true, "log_path": "/Users/axross/Snowflake/QuickStarts/dbt_cortex_analytics/dbt/logs", "show_all_deprecations": false, "skip_nodes_if_on_run_start_fails": false, "log_file_max_bytes": 10485760}}